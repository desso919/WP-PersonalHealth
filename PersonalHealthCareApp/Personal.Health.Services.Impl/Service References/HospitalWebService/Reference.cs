//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Personal.Health.Services.Impl.HospitalWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HospitalWebService.IHospitalService")]
    public interface IHospitalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatient", ReplyAction="http://tempuri.org/IHospitalService/GetPatientResponse")]
        string GetPatient(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatient", ReplyAction="http://tempuri.org/IHospitalService/GetPatientResponse")]
        System.Threading.Tasks.Task<string> GetPatientAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatientByUsernameAndPassword", ReplyAction="http://tempuri.org/IHospitalService/GetPatientByUsernameAndPasswordResponse")]
        string GetPatientByUsernameAndPassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatientByUsernameAndPassword", ReplyAction="http://tempuri.org/IHospitalService/GetPatientByUsernameAndPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPatientByUsernameAndPasswordAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatientByEGNAndPassword", ReplyAction="http://tempuri.org/IHospitalService/GetPatientByEGNAndPasswordResponse")]
        string GetPatientByEGNAndPassword(string egn, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatientByEGNAndPassword", ReplyAction="http://tempuri.org/IHospitalService/GetPatientByEGNAndPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPatientByEGNAndPasswordAsync(string egn, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddNewPatient", ReplyAction="http://tempuri.org/IHospitalService/AddNewPatientResponse")]
        bool AddNewPatient(string username, string password, string first_name, string second_name, string last_name, string egn, string gender, int age, string birth_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddNewPatient", ReplyAction="http://tempuri.org/IHospitalService/AddNewPatientResponse")]
        System.Threading.Tasks.Task<bool> AddNewPatientAsync(string username, string password, string first_name, string second_name, string last_name, string egn, string gender, int age, string birth_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetHospital", ReplyAction="http://tempuri.org/IHospitalService/GetHospitalResponse")]
        string GetHospital(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetHospital", ReplyAction="http://tempuri.org/IHospitalService/GetHospitalResponse")]
        System.Threading.Tasks.Task<string> GetHospitalAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllHospitals", ReplyAction="http://tempuri.org/IHospitalService/GetAllHospitalsResponse")]
        string GetAllHospitals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllHospitals", ReplyAction="http://tempuri.org/IHospitalService/GetAllHospitalsResponse")]
        System.Threading.Tasks.Task<string> GetAllHospitalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetDoctor", ReplyAction="http://tempuri.org/IHospitalService/GetDoctorResponse")]
        string GetDoctor(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetDoctor", ReplyAction="http://tempuri.org/IHospitalService/GetDoctorResponse")]
        System.Threading.Tasks.Task<string> GetDoctorAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetDoctorsByHospitalId", ReplyAction="http://tempuri.org/IHospitalService/GetDoctorsByHospitalIdResponse")]
        string GetDoctorsByHospitalId(long hospital_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetDoctorsByHospitalId", ReplyAction="http://tempuri.org/IHospitalService/GetDoctorsByHospitalIdResponse")]
        System.Threading.Tasks.Task<string> GetDoctorsByHospitalIdAsync(long hospital_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllDoctors", ReplyAction="http://tempuri.org/IHospitalService/GetAllDoctorsResponse")]
        string GetAllDoctors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllDoctors", ReplyAction="http://tempuri.org/IHospitalService/GetAllDoctorsResponse")]
        System.Threading.Tasks.Task<string> GetAllDoctorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatientAllergies", ReplyAction="http://tempuri.org/IHospitalService/GetPatientAllergiesResponse")]
        string GetPatientAllergies(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetPatientAllergies", ReplyAction="http://tempuri.org/IHospitalService/GetPatientAllergiesResponse")]
        System.Threading.Tasks.Task<string> GetPatientAllergiesAsync(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllAllergies", ReplyAction="http://tempuri.org/IHospitalService/GetAllAllergiesResponse")]
        string GetAllAllergies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllAllergies", ReplyAction="http://tempuri.org/IHospitalService/GetAllAllergiesResponse")]
        System.Threading.Tasks.Task<string> GetAllAllergiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetHospitalRecord", ReplyAction="http://tempuri.org/IHospitalService/GetHospitalRecordResponse")]
        string GetHospitalRecord(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetHospitalRecord", ReplyAction="http://tempuri.org/IHospitalService/GetHospitalRecordResponse")]
        System.Threading.Tasks.Task<string> GetHospitalRecordAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetHospitalRecordByPatientID", ReplyAction="http://tempuri.org/IHospitalService/GetHospitalRecordByPatientIDResponse")]
        string GetHospitalRecordByPatientID(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetHospitalRecordByPatientID", ReplyAction="http://tempuri.org/IHospitalService/GetHospitalRecordByPatientIDResponse")]
        System.Threading.Tasks.Task<string> GetHospitalRecordByPatientIDAsync(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddNewHospitalRecord", ReplyAction="http://tempuri.org/IHospitalService/AddNewHospitalRecordResponse")]
        bool AddNewHospitalRecord(long patient_id, long hospital_id, long doctor_id, string reason, string diagnose, string date, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddNewHospitalRecord", ReplyAction="http://tempuri.org/IHospitalService/AddNewHospitalRecordResponse")]
        System.Threading.Tasks.Task<bool> AddNewHospitalRecordAsync(long patient_id, long hospital_id, long doctor_id, string reason, string diagnose, string date, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetVisitation", ReplyAction="http://tempuri.org/IHospitalService/GetVisitationResponse")]
        string GetVisitation(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetVisitation", ReplyAction="http://tempuri.org/IHospitalService/GetVisitationResponse")]
        System.Threading.Tasks.Task<string> GetVisitationAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetVisitationByPatientID", ReplyAction="http://tempuri.org/IHospitalService/GetVisitationByPatientIDResponse")]
        string GetVisitationByPatientID(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetVisitationByPatientID", ReplyAction="http://tempuri.org/IHospitalService/GetVisitationByPatientIDResponse")]
        System.Threading.Tasks.Task<string> GetVisitationByPatientIDAsync(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/MakeVisitationHistory", ReplyAction="http://tempuri.org/IHospitalService/MakeVisitationHistoryResponse")]
        bool MakeVisitationHistory(long id, string diagnose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/MakeVisitationHistory", ReplyAction="http://tempuri.org/IHospitalService/MakeVisitationHistoryResponse")]
        System.Threading.Tasks.Task<bool> MakeVisitationHistoryAsync(long id, string diagnose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddNewVisitation", ReplyAction="http://tempuri.org/IHospitalService/AddNewVisitationResponse")]
        bool AddNewVisitation(long patient_id, long hospital_id, long doctor_id, string date, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddNewVisitation", ReplyAction="http://tempuri.org/IHospitalService/AddNewVisitationResponse")]
        System.Threading.Tasks.Task<bool> AddNewVisitationAsync(long patient_id, long hospital_id, long doctor_id, string date, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/EditVisitation", ReplyAction="http://tempuri.org/IHospitalService/EditVisitationResponse")]
        bool EditVisitation(long id, long hospital_id, long doctor_id, string date, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/EditVisitation", ReplyAction="http://tempuri.org/IHospitalService/EditVisitationResponse")]
        System.Threading.Tasks.Task<bool> EditVisitationAsync(long id, long hospital_id, long doctor_id, string date, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/RatingHospital", ReplyAction="http://tempuri.org/IHospitalService/RatingHospitalResponse")]
        bool RatingHospital(long patient_id, long hospital_id, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/RatingHospital", ReplyAction="http://tempuri.org/IHospitalService/RatingHospitalResponse")]
        System.Threading.Tasks.Task<bool> RatingHospitalAsync(long patient_id, long hospital_id, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/RatingDoctor", ReplyAction="http://tempuri.org/IHospitalService/RatingDoctorResponse")]
        bool RatingDoctor(long patient_id, long doctor_id, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/RatingDoctor", ReplyAction="http://tempuri.org/IHospitalService/RatingDoctorResponse")]
        System.Threading.Tasks.Task<bool> RatingDoctorAsync(long patient_id, long doctor_id, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetTemplate", ReplyAction="http://tempuri.org/IHospitalService/GetTemplateResponse")]
        string GetTemplate(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetTemplate", ReplyAction="http://tempuri.org/IHospitalService/GetTemplateResponse")]
        System.Threading.Tasks.Task<string> GetTemplateAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllPatientTemplates", ReplyAction="http://tempuri.org/IHospitalService/GetAllPatientTemplatesResponse")]
        string GetAllPatientTemplates(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetAllPatientTemplates", ReplyAction="http://tempuri.org/IHospitalService/GetAllPatientTemplatesResponse")]
        System.Threading.Tasks.Task<string> GetAllPatientTemplatesAsync(long patient_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddTemplate", ReplyAction="http://tempuri.org/IHospitalService/AddTemplateResponse")]
        bool AddTemplate(long patient_id, long hospital_id, long doctor_id, string title, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/AddTemplate", ReplyAction="http://tempuri.org/IHospitalService/AddTemplateResponse")]
        System.Threading.Tasks.Task<bool> AddTemplateAsync(long patient_id, long hospital_id, long doctor_id, string title, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/EditTemplate", ReplyAction="http://tempuri.org/IHospitalService/EditTemplateResponse")]
        bool EditTemplate(long id, long hospital_id, long doctor_id, string title, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/EditTemplate", ReplyAction="http://tempuri.org/IHospitalService/EditTemplateResponse")]
        System.Threading.Tasks.Task<bool> EditTemplateAsync(long id, long hospital_id, long doctor_id, string title, string reason, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetRecommendedVisitation", ReplyAction="http://tempuri.org/IHospitalService/GetRecommendedVisitationResponse")]
        string GetRecommendedVisitation(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetRecommendedVisitation", ReplyAction="http://tempuri.org/IHospitalService/GetRecommendedVisitationResponse")]
        System.Threading.Tasks.Task<string> GetRecommendedVisitationAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetRecommendedVisitationForPatient", ReplyAction="http://tempuri.org/IHospitalService/GetRecommendedVisitationForPatientResponse")]
        string GetRecommendedVisitationForPatient(int age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetRecommendedVisitationForPatient", ReplyAction="http://tempuri.org/IHospitalService/GetRecommendedVisitationForPatientResponse")]
        System.Threading.Tasks.Task<string> GetRecommendedVisitationForPatientAsync(int age);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHospitalServiceChannel : Personal.Health.Services.Impl.HospitalWebService.IHospitalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HospitalServiceClient : System.ServiceModel.ClientBase<Personal.Health.Services.Impl.HospitalWebService.IHospitalService>, Personal.Health.Services.Impl.HospitalWebService.IHospitalService {
        
        public HospitalServiceClient() {
        }
        
        public HospitalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetPatient(long id) {
            return base.Channel.GetPatient(id);
        }
        
        public System.Threading.Tasks.Task<string> GetPatientAsync(long id) {
            return base.Channel.GetPatientAsync(id);
        }
        
        public string GetPatientByUsernameAndPassword(string username, string password) {
            return base.Channel.GetPatientByUsernameAndPassword(username, password);
        }
        
        public System.Threading.Tasks.Task<string> GetPatientByUsernameAndPasswordAsync(string username, string password) {
            return base.Channel.GetPatientByUsernameAndPasswordAsync(username, password);
        }
        
        public string GetPatientByEGNAndPassword(string egn, string password) {
            return base.Channel.GetPatientByEGNAndPassword(egn, password);
        }
        
        public System.Threading.Tasks.Task<string> GetPatientByEGNAndPasswordAsync(string egn, string password) {
            return base.Channel.GetPatientByEGNAndPasswordAsync(egn, password);
        }
        
        public bool AddNewPatient(string username, string password, string first_name, string second_name, string last_name, string egn, string gender, int age, string birth_date) {
            return base.Channel.AddNewPatient(username, password, first_name, second_name, last_name, egn, gender, age, birth_date);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewPatientAsync(string username, string password, string first_name, string second_name, string last_name, string egn, string gender, int age, string birth_date) {
            return base.Channel.AddNewPatientAsync(username, password, first_name, second_name, last_name, egn, gender, age, birth_date);
        }
        
        public string GetHospital(long id) {
            return base.Channel.GetHospital(id);
        }
        
        public System.Threading.Tasks.Task<string> GetHospitalAsync(long id) {
            return base.Channel.GetHospitalAsync(id);
        }
        
        public string GetAllHospitals() {
            return base.Channel.GetAllHospitals();
        }
        
        public System.Threading.Tasks.Task<string> GetAllHospitalsAsync() {
            return base.Channel.GetAllHospitalsAsync();
        }
        
        public string GetDoctor(long id) {
            return base.Channel.GetDoctor(id);
        }
        
        public System.Threading.Tasks.Task<string> GetDoctorAsync(long id) {
            return base.Channel.GetDoctorAsync(id);
        }
        
        public string GetDoctorsByHospitalId(long hospital_id) {
            return base.Channel.GetDoctorsByHospitalId(hospital_id);
        }
        
        public System.Threading.Tasks.Task<string> GetDoctorsByHospitalIdAsync(long hospital_id) {
            return base.Channel.GetDoctorsByHospitalIdAsync(hospital_id);
        }
        
        public string GetAllDoctors() {
            return base.Channel.GetAllDoctors();
        }
        
        public System.Threading.Tasks.Task<string> GetAllDoctorsAsync() {
            return base.Channel.GetAllDoctorsAsync();
        }
        
        public string GetPatientAllergies(long patient_id) {
            return base.Channel.GetPatientAllergies(patient_id);
        }
        
        public System.Threading.Tasks.Task<string> GetPatientAllergiesAsync(long patient_id) {
            return base.Channel.GetPatientAllergiesAsync(patient_id);
        }
        
        public string GetAllAllergies() {
            return base.Channel.GetAllAllergies();
        }
        
        public System.Threading.Tasks.Task<string> GetAllAllergiesAsync() {
            return base.Channel.GetAllAllergiesAsync();
        }
        
        public string GetHospitalRecord(long id) {
            return base.Channel.GetHospitalRecord(id);
        }
        
        public System.Threading.Tasks.Task<string> GetHospitalRecordAsync(long id) {
            return base.Channel.GetHospitalRecordAsync(id);
        }
        
        public string GetHospitalRecordByPatientID(long patient_id) {
            return base.Channel.GetHospitalRecordByPatientID(patient_id);
        }
        
        public System.Threading.Tasks.Task<string> GetHospitalRecordByPatientIDAsync(long patient_id) {
            return base.Channel.GetHospitalRecordByPatientIDAsync(patient_id);
        }
        
        public bool AddNewHospitalRecord(long patient_id, long hospital_id, long doctor_id, string reason, string diagnose, string date, string description) {
            return base.Channel.AddNewHospitalRecord(patient_id, hospital_id, doctor_id, reason, diagnose, date, description);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewHospitalRecordAsync(long patient_id, long hospital_id, long doctor_id, string reason, string diagnose, string date, string description) {
            return base.Channel.AddNewHospitalRecordAsync(patient_id, hospital_id, doctor_id, reason, diagnose, date, description);
        }
        
        public string GetVisitation(long id) {
            return base.Channel.GetVisitation(id);
        }
        
        public System.Threading.Tasks.Task<string> GetVisitationAsync(long id) {
            return base.Channel.GetVisitationAsync(id);
        }
        
        public string GetVisitationByPatientID(long patient_id) {
            return base.Channel.GetVisitationByPatientID(patient_id);
        }
        
        public System.Threading.Tasks.Task<string> GetVisitationByPatientIDAsync(long patient_id) {
            return base.Channel.GetVisitationByPatientIDAsync(patient_id);
        }
        
        public bool MakeVisitationHistory(long id, string diagnose) {
            return base.Channel.MakeVisitationHistory(id, diagnose);
        }
        
        public System.Threading.Tasks.Task<bool> MakeVisitationHistoryAsync(long id, string diagnose) {
            return base.Channel.MakeVisitationHistoryAsync(id, diagnose);
        }
        
        public bool AddNewVisitation(long patient_id, long hospital_id, long doctor_id, string date, string reason, string description) {
            return base.Channel.AddNewVisitation(patient_id, hospital_id, doctor_id, date, reason, description);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewVisitationAsync(long patient_id, long hospital_id, long doctor_id, string date, string reason, string description) {
            return base.Channel.AddNewVisitationAsync(patient_id, hospital_id, doctor_id, date, reason, description);
        }
        
        public bool EditVisitation(long id, long hospital_id, long doctor_id, string date, string reason, string description) {
            return base.Channel.EditVisitation(id, hospital_id, doctor_id, date, reason, description);
        }
        
        public System.Threading.Tasks.Task<bool> EditVisitationAsync(long id, long hospital_id, long doctor_id, string date, string reason, string description) {
            return base.Channel.EditVisitationAsync(id, hospital_id, doctor_id, date, reason, description);
        }
        
        public bool RatingHospital(long patient_id, long hospital_id, int rating) {
            return base.Channel.RatingHospital(patient_id, hospital_id, rating);
        }
        
        public System.Threading.Tasks.Task<bool> RatingHospitalAsync(long patient_id, long hospital_id, int rating) {
            return base.Channel.RatingHospitalAsync(patient_id, hospital_id, rating);
        }
        
        public bool RatingDoctor(long patient_id, long doctor_id, int rating) {
            return base.Channel.RatingDoctor(patient_id, doctor_id, rating);
        }
        
        public System.Threading.Tasks.Task<bool> RatingDoctorAsync(long patient_id, long doctor_id, int rating) {
            return base.Channel.RatingDoctorAsync(patient_id, doctor_id, rating);
        }
        
        public string GetTemplate(long id) {
            return base.Channel.GetTemplate(id);
        }
        
        public System.Threading.Tasks.Task<string> GetTemplateAsync(long id) {
            return base.Channel.GetTemplateAsync(id);
        }
        
        public string GetAllPatientTemplates(long patient_id) {
            return base.Channel.GetAllPatientTemplates(patient_id);
        }
        
        public System.Threading.Tasks.Task<string> GetAllPatientTemplatesAsync(long patient_id) {
            return base.Channel.GetAllPatientTemplatesAsync(patient_id);
        }
        
        public bool AddTemplate(long patient_id, long hospital_id, long doctor_id, string title, string reason, string description) {
            return base.Channel.AddTemplate(patient_id, hospital_id, doctor_id, title, reason, description);
        }
        
        public System.Threading.Tasks.Task<bool> AddTemplateAsync(long patient_id, long hospital_id, long doctor_id, string title, string reason, string description) {
            return base.Channel.AddTemplateAsync(patient_id, hospital_id, doctor_id, title, reason, description);
        }
        
        public bool EditTemplate(long id, long hospital_id, long doctor_id, string title, string reason, string description) {
            return base.Channel.EditTemplate(id, hospital_id, doctor_id, title, reason, description);
        }
        
        public System.Threading.Tasks.Task<bool> EditTemplateAsync(long id, long hospital_id, long doctor_id, string title, string reason, string description) {
            return base.Channel.EditTemplateAsync(id, hospital_id, doctor_id, title, reason, description);
        }
        
        public string GetRecommendedVisitation(long id) {
            return base.Channel.GetRecommendedVisitation(id);
        }
        
        public System.Threading.Tasks.Task<string> GetRecommendedVisitationAsync(long id) {
            return base.Channel.GetRecommendedVisitationAsync(id);
        }
        
        public string GetRecommendedVisitationForPatient(int age) {
            return base.Channel.GetRecommendedVisitationForPatient(age);
        }
        
        public System.Threading.Tasks.Task<string> GetRecommendedVisitationForPatientAsync(int age) {
            return base.Channel.GetRecommendedVisitationForPatientAsync(age);
        }
    }
}
